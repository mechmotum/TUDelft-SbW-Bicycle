function csvData(fileName, third)
% Extracts the data from a .mat file, and writes it into a .csv file.
% Only the data recorded during the trial is saved. The data recorder while the
% treadmill is accelerating or slowing down is not included.
%
% INPUTS:
%   fileName - string with a filename and extension of the file of interest
%   third - set to 1 if the file of interest was obtained during ETR trial
%
% Written by S. Drauksas, 2022

%% Load the file and extract the data
load(fileName);
% Extract data received from the bicycle
bikeRaw = timeseries2timetable(out.BicycleData.Switch_State, ...
                               out.BicycleData.Handlebar_Angle);
% Extract data received from the HTC Vive Tracker
viveRaw = timeseries2timetable(out.ViveData.Timestamp, ...
                               out.ViveData.Pos_X, ...
                               out.ViveData.Pos_Y, ...
                               out.ViveData.Pos_Z, ...
                               out.ViveData.Rot_W, ...
                               out.ViveData.Rot_X, ...
                               out.ViveData.Rot_Y, ...
                               out.ViveData.Rot_Z);
% Extract the processed bicycle state
bikeStateBT = timeseries2timetable(out.BicycleState.delta, ...
                                   out.BicycleState.d_delta);
bikeStateUDP = timeseries2timetable(out.BicycleState.y_P, ...
                                    out.BicycleState.psi, ...
                                    out.BicycleState.phi, ...
                                    out.BicycleState.d_phi);
% Extract MPC data
mpcStats = timeseries2timetable(out.MpcStats.fval, ...
                                out.MpcStats.flag, ...
                                out.MpcStats.iter);
mpcTorque = timeseries2timetable(out.SteerTorque);
% Extract reference data, keep only the current timestep values, discard future
reference = timeseries2timetable(out.Reference);
reference = timetable(reference.Time,...
                      reference.Data(:,1), ...
                      reference.Data(:,2), ...
                      reference.Data(:,3), ...
                      reference.Data(:,4), ...
                      reference.Data(:,5), ...
                      reference.Data(:,6), ...
                      VariableNames={'ref_y_P', ...
                                     'ref_psi', ...
                                     'ref_phi', ...
                                     'ref_delta', ...
                                     'ref_d_phi', ...
                                     'ref_d_delta'});
% Extract data from the researcher's button
button = timeseries2timetable(out.TrialState);
% Synchronise data between different sample rates
synch = synchronize(viveRaw, ...
                    bikeRaw, ...
                    bikeStateBT, ...
                    bikeStateUDP, ...
                    mpcStats, ...
                    mpcTorque, ...
                    reference, ...
                    button, ...
                    'union','previous');

%% Find the time range of the trial
temp = find(button.Data == 1); % When was the button pressed?
protocolStart = temp(1);
if third % "result_ret.mat" only has a 2 minute long ETR trial
    len = 120;
else % Other files have 2min (BL, MTR) + 6min (T1, T2) trials
    len = 480;
end

t = timerange(button.Time(protocolStart), ...
              button.Time(protocolStart) + seconds(len));

%% Write the table
% Only write the trial data, discard treadmill acceleration and deceleration
rawTable = timetable2table(synch(t,:));
writetable(rawTable, fileName + "_Data.csv");
end